{"ast":null,"code":"import{jsxs as _jsxs}from\"react/jsx-runtime\";import{jsx as _jsx}from\"react/jsx-runtime\";import _slicedToArray from\"/Users/philipmcloughlin/Desktop2/RobFriends-ReactHooks/RoboApp/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";import React,{useState,useEffect}from'react';import CardList from'../components/CardList';import SearchBox from'../components/SearchBox';import Scroll from'../components/Scroll';import'./App.css';function App(){var _useState=useState([]),_useState2=_slicedToArray(_useState,2),robots=_useState2[0],setRobots=_useState2[1];var _useState3=useState(''),_useState4=_slicedToArray(_useState3,2),searchfield=_useState4[0],setSearchfield=_useState4[1];var _useState5=useState(false),_useState6=_slicedToArray(_useState5,2),on=_useState6[0],setOn=_useState6[1];useEffect(function(){fetch('https://jsonplaceholder.typicode.com/users').then(function(response){return response.json();}).then(function(users){return setRobots(users);});},[]);var onSearchChange=function onSearchChange(event){setSearchfield(event.target.value);};var changeColor=function changeColor(){return setOn(function(on){return!on;});};var filteredRobots=robots.filter(function(robot){return robot.name.toLowerCase().includes(searchfield.toLowerCase());});if(robots.length===0){return/*#__PURE__*/_jsx(\"h1\",{children:\"Loading\"});}else{return/*#__PURE__*/_jsx(\"div\",{className:\"tc\",children:/*#__PURE__*/_jsxs(\"body\",{className:on?\"color-change\":\"original-color\",children:[/*#__PURE__*/_jsx(\"button\",{className:\"pa3 bg-yellow\",onClick:changeColor}),/*#__PURE__*/_jsx(\"h1\",{className:\"f1\",children:\"RoboFriends\"}),/*#__PURE__*/_jsx(SearchBox,{searchChange:onSearchChange}),/*#__PURE__*/_jsx(Scroll,{children:/*#__PURE__*/_jsx(CardList,{robots:filteredRobots})})]})});}}export default App;","map":{"version":3,"sources":["/Users/philipmcloughlin/Desktop2/RobFriends-ReactHooks/RoboApp/src/containers/App.js"],"names":["React","useState","useEffect","CardList","SearchBox","Scroll","App","robots","setRobots","searchfield","setSearchfield","on","setOn","fetch","then","response","json","users","onSearchChange","event","target","value","changeColor","filteredRobots","filter","robot","name","toLowerCase","includes","length"],"mappings":"6QAAA,MAAOA,CAAAA,KAAP,EAAgBC,QAAhB,CAA0BC,SAA1B,KAA2C,OAA3C,CACA,MAAOC,CAAAA,QAAP,KAAqB,wBAArB,CACA,MAAOC,CAAAA,SAAP,KAAsB,yBAAtB,CACA,MAAOC,CAAAA,MAAP,KAAmB,sBAAnB,CACA,MAAO,WAAP,CAEA,QAASC,CAAAA,GAAT,EAAgB,eAGgBL,QAAQ,CAAC,EAAD,CAHxB,wCAGLM,MAHK,eAGGC,SAHH,8BAI0BP,QAAQ,CAAC,EAAD,CAJlC,yCAILQ,WAJK,eAIQC,cAJR,8BAKQT,QAAQ,CAAC,KAAD,CALhB,yCAKLU,EALK,eAKDC,KALC,eAQZV,SAAS,CAAC,UAAM,CACZW,KAAK,CAAC,4CAAD,CAAL,CACKC,IADL,CACU,SAAAC,QAAQ,QAAGA,CAAAA,QAAQ,CAACC,IAAT,EAAH,EADlB,EAEKF,IAFL,CAEU,SAAAG,KAAK,QAAIT,CAAAA,SAAS,CAACS,KAAD,CAAb,EAFf,EAGH,CAJQ,CAIP,EAJO,CAAT,CAMA,GAAMC,CAAAA,cAAc,CAAG,QAAjBA,CAAAA,cAAiB,CAACC,KAAD,CAAW,CAC/BT,cAAc,CAACS,KAAK,CAACC,MAAN,CAAaC,KAAd,CAAd,CACF,CAFD,CAIA,GAAMC,CAAAA,WAAW,CAAG,QAAdA,CAAAA,WAAc,SAAMV,CAAAA,KAAK,CAAC,SAAAD,EAAE,QAAI,CAACA,EAAL,EAAH,CAAX,EAApB,CAGA,GAAMY,CAAAA,cAAc,CAAGhB,MAAM,CAACiB,MAAP,CAAc,SAAAC,KAAK,CAAI,CAC1C,MAAOA,CAAAA,KAAK,CAACC,IAAN,CAAWC,WAAX,GAAyBC,QAAzB,CAAkCnB,WAAW,CAACkB,WAAZ,EAAlC,CAAP,CACC,CAFkB,CAAvB,CAGI,GAAIpB,MAAM,CAACsB,MAAP,GAAkB,CAAtB,CAAyB,CACrB,mBAAO,+BAAP,CACD,CAFH,IAGK,CACD,mBACA,YAAK,SAAS,CAAE,IAAhB,uBACI,cAAM,SAAS,CAAIlB,EAAE,CAAG,cAAH,CAAoB,gBAAzC,wBACI,eAAQ,SAAS,CAAC,eAAlB,CAAkC,OAAO,CAAIW,WAA7C,EADJ,cAEI,WAAI,SAAS,CAAG,IAAhB,yBAFJ,cAGI,KAAC,SAAD,EAAW,YAAY,CAAEJ,cAAzB,EAHJ,cAII,KAAC,MAAD,wBACI,KAAC,QAAD,EACA,MAAM,CAAEK,cADR,EADJ,EAJJ,GADJ,EADA,CAcH,CACJ,CAML,cAAejB,CAAAA,GAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\nimport CardList from '../components/CardList'\nimport SearchBox from '../components/SearchBox';\nimport Scroll from '../components/Scroll';\nimport './App.css';\n\nfunction App () {\n   \n\n    const [robots, setRobots] = useState([])\n    const [searchfield, setSearchfield] = useState('')\n    const [on, setOn] = useState(false)\n    \n    \n    useEffect(() => {\n        fetch('https://jsonplaceholder.typicode.com/users')\n            .then(response=> response.json())\n            .then(users => setRobots(users));\n    },[])\n\n    const onSearchChange = (event) => {\n       setSearchfield(event.target.value)\n    }\n\n    const changeColor = () => setOn(on => !on);\n\n\n    const filteredRobots = robots.filter(robot => {\n        return robot.name.toLowerCase().includes(searchfield.toLowerCase());\n        })\n        if (robots.length === 0) {\n            return <h1>Loading</h1>\n          }\n        else {\n            return (   \n            <div className ='tc'>\n                <body className = {on ? \"color-change\" : \"original-color\"}>\n                    <button className='pa3 bg-yellow' onClick = {changeColor}></button>\n                    <h1 className = 'f1'>RoboFriends</h1>\n                    <SearchBox searchChange={onSearchChange}/>\n                    <Scroll>\n                        <CardList \n                        robots={filteredRobots}\n                            />\n                    </Scroll>\n                </body>\n             </div>\n            );\n        }\n    }\n\n\n  \n\n    \nexport default App; "]},"metadata":{},"sourceType":"module"}